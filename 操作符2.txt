#include<stdio.h>

//隐式类型转换 整型提升
int main()
{
	char a = 3;
	//printf("%d\n", a);
	//00000000 00000000 00000000 00000011
	//00000011 - a
	char b = 127;
	//00000000 00000000 00000000 01111111
	//01111111 -b
	char c = a + b;
	//00000000 00000000 00000000 00000011
	//00000000 00000000 00000000 01111111
	//00000000 00000000 00000000 10000010

	//00000000000000000000000010000010

	//10000010 - c
	//11111111111111111111111110000010 -补码  整型提升:按照变量的数据类型的符号位来提升
	//11111111111111111111111110000001 -反码
	//10000000000000000000000001111110 -原码  -126
	printf("%d\n", c);
	return 0;
}


//创建一个结构体类型
//struct Stu
//{
//	char name[20];
//	int age;
//	char id[20];
//};
//int main()
//{
//	//使用struct Stu这个类型创建了一个学生对象s1，并初始化
//	struct Stu s1 = { "张三", 20, "001" };
//	printf("%s\n", s1.name);//结构体变量.成员名
//	struct Stu* ps = &s1;
//	printf("%s\n", ps->name);
//	printf("%s\n", (*ps).name);
//	
//
//
//	return 0;
//}


//函数调用时候的()为函数调用操作符 


//int main()
//{
//	int a = 1;
//	int b = 2;
//	int c = (a > b, a = b + 10, a, b = a + 1);//逗号表达式 结果为最后一个逗号的值
//	printf("%d\n", c);
//	
//	return 0;
//}


//int main()
//{
//	int i = 0, a = 0, b = 2, c = 3, d = 4;
//	//i = a++ && ++b && d++;//&& 左边为0时 则不计算右边
//	i = a++ || ++b || d++;//|| 左边为1时 则不计算右边
//	printf("i=%d\n", i);
//
//	printf(" a=%d\n b=%d\n c=%d\n d=%d\n", a, b, c, d);
//	return 0;
//}

//int main()
//{
//	int a = 11;
//	a = a | (1 << 2);
//	printf("%d\n", a);
//	a = a&(~(1 << 2));
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	short s = 0;
//	int a = 10;
//	printf("%d\n", sizeof(s = a + 5));
//	printf("%d\n", s);
//	return 0;
//}